call plug#begin()
    Plug 'flazz/vim-colorschemes'
    Plug 'nathanaelkane/vim-indent-guides'
    Plug 'scrooloose/nerdcommenter'
    Plug 'airblade/vim-gitgutter'
    Plug 'majutsushi/tagbar'
    Plug 'mklabs/vim-issues'
    Plug 'xolox/vim-misc'
    Plug 'xolox/vim-lua-ftplugin'
    Plug 'tpope/vim-surround'
    Plug 'wincent/command-t'
    Plug 'wesQ3/vim-windowswap'
    Plug 'mklabs/vim-issues'
    Plug 'scrooloose/syntastic'
    Plug 'tpope/vim-fugitive'
    Plug 'jaxbot/github-issues.vim'
 "--Web Development--
    Plug 'isruslan/vim-es6'
    Plug 'skammer/vim-css-color'
    Plug 'leafgarland/typescript-vim'
    Plug 'HerringtonDarkholme/yats.vim'
    Plug 'Quramy/tsuquyomi'
    Plug 'jelera/vim-javascript-syntax'
    Plug 'pangloss/vim-javascript'
    "--MIPS programming--
    Plug 'Harenome/vim-mipssyntax'
    "--Erlang highlight syntax
    Plug 'vim-erlang/vim-erlang-runtime'
    "--LaTeX Suite--
    Plug 'lervag/vimtex'
call plug#end()
"Display Sets.
set hidden
set wildignore=*.swp,*.bak,*.pyc,*.class,*.o
set relativenumber "Relative number
set nu "Line Number
set modeline

"TabStops and ShiftWidth
set ts=4 noexpandtab sw=4 textwidth=150
"Visual autocomplete for command menu
set wildmenu
"Perma StatusBar
set laststatus=2
"Set ColorSTD
set t_Co=256
"Syntax Highlighting
syntax on
set nocompatible
"Show incomplete Commands
set showcmd 

set noendofline binary
"fold methods
set foldmethod=indent
set foldlevel=99
"Always show Cursor
set ruler

set autoindent smartindent

"Enable system clipboarding 
set clipboard+=unnamedplus

"Highlight Searching
"Highlight search Matches
set hlsearch
"Incremental Searching *Search on Type
set incsearch 
"Ignore case on Search
set smartcase
"No escape character
set ignorecase
"Command history
set history=100
"No Time Delay when press O
set timeout timeoutlen=1000 ttimeoutlen=100

" Allow backspace to delete end of line, indent and start of line characters
set backspace=indent,eol,start
set backspace=2
" No Intro
set shortmess+=I
" No Beep when misstype
"matching {[()]} highlighted
set showmatch


"Files Changed
" No Swap File
set noswapfile
" No .bkp File
" set nowritebackup
" vim not compatible with vi
set autoread
set encoding=utf-8
set list
set fileencoding=utf-8
set lcs=tab:\|\ 
set lazyredraw
set tags=tags

"Current mode for statusline
"Status bar

set statusline=%f       " Path to the file
set statusline+=%m
set statusline+=%=        " Switch to the right side
set statusline+=%0*\[%{mode()}]
set statusline+=\ Current:\ 
set statusline+=%l        " Current line
set statusline+=/         " Separator
set statusline+=Total:\ 
set statusline+=%L\         " Total lines
set statusline+=%{fugitive#statusline()}

"Visual 
"Colorschemes
"colo valloric 
"colo railscasts
"colo zenburn
"colo gotham256
"colo Revolution
"colo mustang
"colo industry
"Line Number
"colo northland
"colo wood
colo wasabi256
hi LineNr term=bold ctermfg=15 ctermbg=none 
hi CursorLineNr   term=bold  ctermfg=black ctermbg=15
"StatusLine
hi StatusLine ctermfg=white ctermbg=22
hi StatusLineNC  ctermbg=black ctermfg=white
"Tabline, TablineFill
hi TabLine ctermfg=white ctermbg=black
hi TabLineFill  ctermbg=black ctermfg=22
hi TabLineSel ctermbg=white ctermfg=black
hi Title ctermbg=black ctermfg=white
"Search Highlight Style
hi Search  ctermfg=white ctermbg=blue

"ident guides
"Set Leader key
let mapleader= "\<space>"
let localmapleader='\'
"Resizing on arrow keys :)
noremap <silent> <Up> <C-w>+
noremap <silent> <Down> <C-w>-
noremap <silent> <Left> :vertical resize +10<CR>
noremap <silent> <Right> :vertical resize -10<CR>

"No ArrowKeys on Insert Mode
inoremap <Up> <NOP>
inoremap <right> <NOP>
inoremap <Down> <NOP>
inoremap <Left> <NOP>
"Syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_aggregate_errors = 1
"Commands
"remove highlight search
nnoremap <silent><F3> :noh<CR>

"tab navigation
nnoremap <silent><Leader>W :tabnew<CR>
nnoremap  <silent><Leader>Q :tabclose<CR>
nnoremap <silent><Leader>n :tabfirst<CR>
nnoremap <silent><Leader>m :tablast<CR>

"split navigation
nnoremap <silent><Leader>v <C-w>v
nnoremap <silent><Leader>s <C-w>s
nnoremap <silent><Leader>q <C-w>q


"clipboard copy - works only in vim versions with (+clipboard) flag sat. 
vnoremap <Leader>y "+y
nnoremap <Leader>p "+p

" TagBar
nnoremap<F6> :TagbarToggle<CR>
let g:tagbar_left = 1

" Window Split Navigation
nnoremap <silent> <Leader>h :wincmd h<CR>
nnoremap <silent> <Leader>j :wincmd j<CR>
nnoremap <silent> <Leader>k :wincmd k<CR>
nnoremap <silent> <Leader>l :wincmd l<CR>

"Enable mouse
"set mouse=a
"
"load .vimrc in new split
nnoremap <leader>ev :vsplit $MYVIMRC<cr>
" source .vimrc
nnoremap <leader>sv :source $MYVIMRC<cr>

"Clean registers
command! WipeReg for i in range(34,122) | silent! call setreg(nr2char(i), []) | endfor

"Netrw

let g:netrw_liststyle = 3
let g:netrw_browse_split = 4
let g:netrw_altv = 1
let g:netrw_winsize = 25
let g:netrw_list_hide ='.git'
nmap <C-n> :Lex<CR>

"Fugitive Token
let g:github_upstream_issues =1
let g:github_api_url = "https://api.github.com/"
let g:gissues_lazy_load = 1